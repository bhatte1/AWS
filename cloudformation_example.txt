AWSTemplateFormatVersion: 2010-09-09
Description: The template used to create an ECS Service from the ECS Console.
Parameters:
  ECSClusterName:
    Type: String
    Default: Demo-Cluster
  SecurityGroupIDs:
    Type: CommaDelimitedList
    Default: sg-03a1d8c7a44a0a560
  SubnetIDs:
    Type: CommaDelimitedList
    Default: 'subnet-02c905d223b54f567,subnet-0242c908108e981e5,subnet-021cc68d717353c79'
  VpcID:
    Type: String
    Default: vpc-0ab135ec7f1e8c4c1
  LoadBalancerType:
    Type: String
    Default: application
    AllowedValues:
      - application
      - network
    ConstraintDescription: must specify an application or network load balancer type.
  LoadBalancerName:
    Type: String
    Default: demoALBforECS
Resources:
  ECSService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: Demo-Cluster
      CapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Base: 0
          Weight: 1
      TaskDefinition: 'arn:aws:ecs:us-east-1:214369635708:task-definition/nginxdemos-hello:1'
      ServiceName: niginxdemos
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: nginxdemos-hello
          ContainerPort: 80
          LoadBalancerName: !Ref 'AWS::NoValue'
          TargetGroupArn: !Ref TargetGroup
      HealthCheckGracePeriodSeconds: '20'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups: !Ref SecurityGroupIDs
          Subnets: !Ref SubnetIDs
      PlatformVersion: LATEST
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DeploymentController:
        Type: ECS
    DependsOn: Listener
  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: demoALBforECS
      SecurityGroups: !Ref SecurityGroupIDs
      Subnets:
        - subnet-02c905d223b54f567
        - subnet-0242c908108e981e5
        - subnet-021cc68d717353c79
      Type: application
  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: nginxECS
      VpcId: vpc-0ab135ec7f1e8c4c1
      Protocol: HTTP
      Port: 80
      HealthCheckPath: /
      TargetType: ip
  Listener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
Outputs:
  ClusterName:
    Description: The cluster used to create the service.
    Value: !Ref ECSClusterName
  ECSService:
    Description: The created service.
    Value: !Ref ECSService
  LoadBalancer:
    Description: The created load balancer.
    Value: !Ref LoadBalancer
  Listener:
    Description: The created listener.
    Value: !Ref Listener
  TargetGroup:
    Description: The created target group.
    Value: !Ref TargetGroup